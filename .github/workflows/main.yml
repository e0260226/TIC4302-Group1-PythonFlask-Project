name: CI-CD
on:
  push:
    branches:
      - main

jobs:
  format-pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install pylint
      run: |
        pip install -e .
        pip install pylint

    - name: Run pylint
      run: |
        pylint --rcfile=pylint.conf flaskr > pylint.txt

    - name: Upload pylint results
      uses: actions/upload-artifact@v3
      with:
          name: pylint-results
          path: pylint.txt

  secret-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Scan for secrets with bandit
        run: |
          pip install bandit
          bandit -r ./flaskr -f json -o bandit.json

      - name: Upload bandit results
        uses: actions/upload-artifact@v3
        with:
            name: bandit-results
            path: bandit.json

  dockerfile-linter:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Lint Dockerfile
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./Dockerfile
          no-fail: true

      - name: Lint Dockerfile test
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: ./Dockerfile.test
          no-fail: true

  build:
    runs-on: ubuntu-latest
    needs: [format-pylint, secret-scan, dockerfile-linter]

    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t flaskr -f Dockerfile .   
  sca:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - run: |
          mkdir -p logs/
      - name: Install Safety
        run: |
          pip install safety
      - name: Safety
        run: |
          safety check -r requirements.txt > result.txt
      - uses: actions/upload-artifact@v3
        with:
          name: safety-logs
          path: result.txt


      - name: Pyraider
        run: |
          pip install pyraider
          pyraider check -f requirements.txt > result.json
      - uses: actions/upload-artifact@v3
        with:
          name: pyraider-logs
          path: result.json             

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3

    - name: Build Docker image for testing
      run: |
        docker build -t flaskr-test -f Dockerfile.test .

